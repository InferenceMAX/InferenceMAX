name: End-to-End Tests

# concurrency:
#     group: benchmark-lock
#     cancel-in-progress: false

on:
    pull_request:
    push:
        branches:
        - initial-refactor
    workflow_dispatch:
        inputs:
            generate-cli-command:
                description: "Command passed to generate matrix script"
                required: false
                type: string
                default: "filtered-sweep --config-files .github/configs/amd-master.yaml .github/configs/nvidia-master.yaml --runner-config .github/configs/runners.yaml --seq-lens 1k1k --model-prefix gptoss --runner-type h200 h200-trt"

jobs:
    get-jobs:
        runs-on: ubuntu-latest
        outputs:
            search-space-config: ${{ steps.get-jobs.outputs.search-space-config }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - id: get-jobs
              run: |
                  pip install pydantic
                  CONFIG_JSON=$(python3 ${GITHUB_WORKSPACE}/utils/matrix-logic/generate_sweep_configs.py ${{ inputs.generate-cli-command }})
                  echo "search-space-config=$CONFIG_JSON" >> $GITHUB_OUTPUT

    test-sweep:
        needs: get-jobs
        uses: ./.github/workflows/benchmark-tmpl.yml
        name: ${{ inputs.generate-cli-command }}
        strategy:
            fail-fast: false
            matrix:
                config: ${{ fromJson(needs.get-jobs.outputs.search-space-config) }}
        secrets: inherit
        with:
            exp-name: ${{ matrix.config.exp-name }}
            isl: ${{ matrix.config.isl }}
            osl: ${{ matrix.config.osl }}
            max-model-len: ${{ matrix.config.max-model-len }}
            runner: ${{ matrix.config.runner }}
            image: ${{ matrix.config.image }}
            model: ${{ matrix.config.model }}
            framework: ${{ matrix.config.framework }}
            precision: ${{ matrix.config.precision }}
            tp: ${{ matrix.config.tp }}
            ep: ${{ matrix.config.ep }}
            dp-attn: ${{ matrix.config.dp-attn }}
            conc: ${{ matrix.config.conc }}

    calc-success-rate:
        needs: test-sweep
        if: ${{ always() }}
        runs-on: ubuntu-latest

        env:
            RESULTS_DIR: "results/"
            STATS_FILENAME: "run_stats"
            GITHUB_TOKEN: ${{ secrets.REPO_PAT }}

        steps:
            - uses: actions/checkout@v3
              with:
                  token: ${{ secrets.REPO_PAT }}
                  fetch-depth: 0

            - name: Download results artifacts
              uses: actions/download-artifact@v4
              with:
                  path: ${{ env.RESULTS_DIR }}
                  pattern: results_*

            - name: Install python dependencies
              run: pip install PyGithub

            - name: Calculate success rate
              run: python3 utils/calc_success_rate.py $STATS_FILENAME

            - uses: actions/upload-artifact@v4
              with:
                  name: "run-stats"
                  path: ${{ env.STATS_FILENAME }}.json
