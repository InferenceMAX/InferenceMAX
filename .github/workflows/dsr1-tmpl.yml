name: DeepSeek R1 Template

on:
  workflow_call:
    inputs:
      exp-name:
        required: true
        type: string
      isl:
        required: true
        type: string
      osl:
        required: true
        type: string
      max-model-len:
        required: true
        type: string
      random-range-ratio:
        required: true
        type: string
      timeout:
        required: false
        type: number
        default: 180
      precision:
        required: false
        type: string
        default: fp8

jobs:
  find-latest-image:
    runs-on: ubuntu-latest
    steps:
      - name: Find the latest Docker image
        run: echo "Hardcoding image tags for now."

  bmk-h200:
    needs: find-latest-image
    uses: ./.github/workflows/benchmark-tmpl.yml
    secrets: inherit
    with:
      exp-name: ${{ inputs.exp-name }}
      isl: ${{ inputs.isl }}
      osl: ${{ inputs.osl }}
      max-model-len: ${{ inputs.max-model-len }}
      random-range-ratio: ${{ inputs.random-range-ratio }}
      runner: h200
      image: 'lmsysorg/sglang:v0.4.9.post1-cu126'
      model: 'deepseek-ai/DeepSeek-R1-0528'
      tp-list: '[8]'
      timeout: ${{ inputs.timeout }}
      framework: 'sglang'
      precision: ${{ inputs.precision }}

  bmk-b200:
    needs: find-latest-image
    uses: ./.github/workflows/benchmark-tmpl.yml
    secrets: inherit
    with:
      exp-name: ${{ inputs.exp-name }}
      isl: ${{ inputs.isl }}
      osl: ${{ inputs.osl }}
      max-model-len: ${{ inputs.max-model-len }}
      random-range-ratio: ${{ inputs.random-range-ratio }}
      runner: b200
      image: 'lmsysorg/sglang:v0.5.0rc1-cu128-b200'
      model: 'deepseek-ai/DeepSeek-R1-0528'
      tp-list: '[8]'
      timeout: ${{ inputs.timeout }}
      framework: 'sglang'
      precision: ${{ inputs.precision }}

  bmk-b200-trt-fp4:
    needs: find-latest-image
    uses: ./.github/workflows/benchmark-tmpl.yml
    secrets: inherit
    with:
      exp-name: ${{ inputs.exp-name }}
      isl: ${{ inputs.isl }}
      osl: ${{ inputs.osl }}
      max-model-len: ${{ inputs.max-model-len }}
      random-range-ratio: ${{ inputs.random-range-ratio }}
      runner: b200-trt
      image: 'nvcr.io#nvidia/tensorrt-llm/release:1.1.0rc2.post1'
      model: 'nvidia/DeepSeek-R1-0528-FP4'
      tp-list: '[8]'
      timeout: ${{ inputs.timeout }}
      framework: 'trt'
      precision: fp4

  bmk-mi300x:
    needs: find-latest-image
    uses: ./.github/workflows/benchmark-tmpl.yml
    secrets: inherit
    with:
      exp-name: ${{ inputs.exp-name }}
      isl: ${{ inputs.isl }}
      osl: ${{ inputs.osl }}
      max-model-len: ${{ inputs.max-model-len }}
      random-range-ratio: ${{ inputs.random-range-ratio }}
      runner: mi300x
      image: 'lmsysorg/sglang:v0.4.9.post2-rocm630-mi30x'
      model: 'deepseek-ai/DeepSeek-R1-0528'
      tp-list: '[8]'
      timeout: ${{ inputs.timeout }}
      framework: 'sglang'
      precision: ${{ inputs.precision }}

  bmk-mi325x:
    needs: find-latest-image
    uses: ./.github/workflows/benchmark-tmpl.yml
    secrets: inherit
    with:
      exp-name: ${{ inputs.exp-name }}
      isl: ${{ inputs.isl }}
      osl: ${{ inputs.osl }}
      max-model-len: ${{ inputs.max-model-len }}
      random-range-ratio: ${{ inputs.random-range-ratio }}
      runner: mi325x
      image: 'lmsysorg/sglang:v0.4.9.post2-rocm630-mi30x'
      model: 'deepseek-ai/DeepSeek-R1-0528'
      tp-list: '[8]'
      timeout: ${{ inputs.timeout }}
      framework: 'sglang'
      precision: ${{ inputs.precision }}

  bmk-mi355x:
    needs: find-latest-image
    uses: ./.github/workflows/benchmark-tmpl.yml
    secrets: inherit
    with:
      exp-name: ${{ inputs.exp-name }}
      isl: ${{ inputs.isl }}
      osl: ${{ inputs.osl }}
      max-model-len: ${{ inputs.max-model-len }}
      random-range-ratio: ${{ inputs.random-range-ratio }}
      runner: mi355x
      image: 'lmsysorg/sglang:v0.5.1.post2-rocm700-mi35x'
      model: 'deepseek-ai/DeepSeek-R1-0528'
      tp-list: '[8]'
      timeout: ${{ inputs.timeout }}
      framework: 'sglang'
      precision: ${{ inputs.precision }}

  collect-results:
    needs: [bmk-h200, bmk-b200, bmk-b200-trt-fp4, bmk-mi300x, bmk-mi325x] 
    if: ${{ always() && !cancelled() }}
    uses: ./.github/workflows/collect-results.yml
    secrets: inherit
    with:
      exp-name: ${{ inputs.exp-name }}
