name: "8K/1K Sweep"

concurrency:
  group: benchmark-lock-8k1k
  cancel-in-progress: false

on:
    # pull_request:
    workflow_dispatch:
#   schedule:
#     - cron: '0 23 * * *'

jobs:
    get-dsr1-configs:
        runs-on: ubuntu-latest
        outputs:
            search-space-config: ${{ steps.get-dsr1-configs.outputs.search-space-config }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - id: get-dsr1-configs
              run: |
                  CONFIG_JSON=$(python3 ${GITHUB_WORKSPACE}/utils/matrix-logic/generate_sweep_configs.py full-sweep --config-files ${GITHUB_WORKSPACE}/.github/configs/nvidia-master.yaml ${GITHUB_WORKSPACE}/.github/configs/amd-master.yaml --seq-lens 8k1k --model-prefix dsr1)
                  echo "search-space-config=$CONFIG_JSON" >> $GITHUB_OUTPUT

    get-gptoss-configs:
        runs-on: ubuntu-latest
        outputs:
            search-space-config: ${{ steps.get-gptoss-configs.outputs.search-space-config }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - id: get-gptoss-configs
              run: |
                  CONFIG_JSON=$(python3 ${GITHUB_WORKSPACE}/utils/matrix-logic/generate_sweep_configs.py full-sweep --config-files ${GITHUB_WORKSPACE}/.github/configs/nvidia-master.yaml ${GITHUB_WORKSPACE}/.github/configs/amd-master.yaml --seq-lens 8k1k --model-prefix gptoss)
                  echo "search-space-config=$CONFIG_JSON" >> $GITHUB_OUTPUT

    benchmark-dsr1:
        needs: get-dsr1-configs
        uses: ./.github/workflows/benchmark-tmpl.yml
        name: dsr1 8k1k
        strategy:
            fail-fast: false
            matrix:
                config: ${{ fromJson(needs.get-dsr1-configs.outputs.search-space-config) }}
        secrets: inherit
        with:
            exp-name: "dsr1_8k1k"
            isl: 1024
            osl: 1024
            max-model-len: 2048
            runner: ${{ matrix.config.runner }}
            image: ${{ matrix.config.image }}
            model: ${{ matrix.config.model }}
            framework: ${{ matrix.config.framework }}
            precision: ${{ matrix.config.precision }}
            tp: ${{ matrix.config.tp }}
            ep: ${{ matrix.config.ep }}
            dp-attn: ${{ matrix.config.dp-attn }}
            conc: ${{ matrix.config.conc }}

    benchmark-gptoss:
        needs: get-gptoss-configs
        uses: ./.github/workflows/benchmark-tmpl.yml
        name: gptoss 8k1k
        strategy:
            fail-fast: false
            matrix:
                config: ${{ fromJson(needs.get-gptoss-configs.outputs.search-space-config) }}
        secrets: inherit
        with:
            exp-name: "gptoss_8k1k"
            isl: 1024
            osl: 1024
            max-model-len: 2048
            runner: ${{ matrix.config.runner }}
            image: ${{ matrix.config.image }}
            model: ${{ matrix.config.model }}
            framework: ${{ matrix.config.framework }}
            precision: ${{ matrix.config.precision }}
            tp: ${{ matrix.config.tp }}
            ep: ${{ matrix.config.ep }}
            dp-attn: ${{ matrix.config.dp-attn }}
            conc: ${{ matrix.config.conc }}

    # This is a workaround until we can integrate GB200 into master configs.
    benchmark-gb200:
        uses: ./.github/workflows/benchmark-multinode-tmpl.yml
        name: gb200 1k1k sweep
        strategy:
            fail-fast: false
            matrix:
                config:
                    - {
                          "image": "nvcr.io#nvidia/ai-dynamo/tensorrtllm-runtime:0.5.1-rc0.pre3",
                          "model": "deepseek-r1-fp4",
                          "model-prefix": "dsr1",
                          "precision": "fp4",
                          "framework": "dynamo-trtllm",
                          "mtp": "off",
                      }
                    - {
                          "image": "nvcr.io#nvidia/ai-dynamo/tensorrtllm-runtime:0.5.1-rc0.pre3",
                          "model": "deepseek-r1-fp4",
                          "model-prefix": "dsr1",
                          "precision": "fp4",
                          "framework": "dynamo-trtllm",
                          "mtp": "on",
                      }
                    - {
                          "image": "nvcr.io/nvidia/ai-dynamo/sglang-runtime:0.5.1-rc0.pre1",
                          "model": "deepseek-ai/DeepSeek-R1-0528",
                          "model-prefix": "dsr1",
                          "precision": "fp8",
                          "framework": "dynamo-sglang",
                          "mtp": "off",
                      }
        secrets: inherit
        with:
            runner: gb200
            image: ${{ matrix.config.image }}
            model: ${{ matrix.config.model }}
            framework: ${{ matrix.config.framework }}
            precision: ${{ matrix.config.precision }}
            exp-name: ${{ matrix.config.model-prefix }}_8k1k
            isl: 8192
            osl: 1024
            max-model-len: 2048
            mtp-mode: ${{ matrix.config.mtp }}

    collect-dsr1-results:
        needs: benchmark-dsr1
        if: ${{ always() }}
        uses: ./.github/workflows/collect-results.yml
        secrets: inherit
        with:
            exp-name: "dsr1_8k1k"

    collect-gptoss-results:
        needs: benchmark-gptoss
        if: ${{ always() }}
        uses: ./.github/workflows/collect-results.yml
        secrets: inherit
        with:
            exp-name: "gptoss_8k1k"
